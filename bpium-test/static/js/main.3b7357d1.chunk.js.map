{"version":3,"sources":["components/Waiter/index.js","actions/auth.js","components/Auth/index.js","components/Map/Marker/index.js","components/Map/index.js","actions/requestData.js","actions/convertData.js","components/App.js","index.js"],"names":["Waiter","react_default","a","createElement","Container","fluid","className","Row","Col","PulseLoader_default","color","size","URL","proxyURL","actions_auth","_x","_ref","apply","this","arguments","_callee","user","res","regenerator_default","wrap","_context","prev","next","fetch","method","headers","Content-Type","body","JSON","stringify","sent","abrupt","stop","Auth","state","authFailed","waiting","setState","auth","console","log","status","props","onAuthSuccess","sendAuthRequest","_this2","esm","onSubmit","onFormSubmit","initialValues","field","type","Button","variant","React","Component","Marker","applicationsCriticalities","points","forEach","point","applications","application","push","criticality","backgroundColor","length","arr","counter","item","maxKey","max","key","getTheMostFrequentValue","N","side","Container_default","style","height","width","marginTop","marginLeft","Map","clusters","mapOptions","center","defaultProps","zoom","onMapChange","_this","createClusters","bounds","getClusters","map","wx","wy","numPoints","lat","lng","id","concat","Supercluster","data","prevProps","cluster","lib_default","bootstrapURLKeys","language","region","defaultCenter","defaultZoom","onChange","options","maps","disableDefaultUI","requestData","_x2","requestData_ref","path","btoa","email","password","geocoder","window","google","Geocoder","convertData","convertData_ref","branches","requests","branch","address","values","Promise","resolve","reject","geocode","results","geometry","location","location_type","all","branchId","recordId","App","authRequired","error","checkAccess","getData","onError","Object","assign","responses","json","Auth_Auth","content","Map_Map","App_Err","Err","statusText","ReactDOM","render","App_App","document","getElementById"],"mappings":"mWAKeA,SAAA,WACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,0CACzBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,0CACbL,EAAAC,EAAAC,cAACK,EAAA,EAAD,KAAKP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAaQ,MAAM,OAAOC,KAAM,0BCNvCC,SAAMC,6EAEGC,EAAA,SAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,uDAAA,SAAAC,EAAeC,GAAf,IAAAC,EAAA,OAAAC,EAAArB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,MAAMhB,EAAK,CACzBiB,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUb,KANV,cACTC,EADSG,EAAAU,KAAAV,EAAAW,OAAA,SASNd,GATM,wBAAAG,EAAAY,SAAAjB,iCCGMkB,6MACnBC,MAAQ,CACNC,YAAY,EACZC,SAAS,0HAGWpB,gFACpBH,KAAKwB,SAAS,CAAED,SAAS,aACTE,EAAKtB,UAAjBC,SACJJ,KAAKwB,SAAS,CAAED,SAAS,IAEzBG,QAAQC,IAAIvB,GAEO,MAAfA,EAAIwB,QACN5B,KAAKwB,SAAS,CAAEF,YAAY,IAE5BtB,KAAK6B,MAAMC,cAAc3B,IACD,MAAfC,EAAIwB,QACb5B,KAAKwB,SAAS,CAAEF,YAAY,4IAOnBnB,GACPH,KAAKqB,MAAME,SACfvB,KAAK+B,gBAAgB5B,oCAGd,IAAA6B,EAAAhC,KACP,OACEjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,4BACzBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,6EACfL,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,SAAU,SAAA/B,GAAI,OAAI6B,EAAKG,aAAahC,IACpCiC,cAAe,IAKfrD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,QACbL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,aAAf,kCACAL,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,cAAaL,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMI,MAAM,QAAQC,KAAK,aAGzDvD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,QACbL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,aAAf,wCACAL,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,iBAAgBL,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMI,MAAM,WAAWC,KAAK,gBAG/DvD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,gBACZY,KAAKqB,MAAMC,WAAa,0IAA8B,IAEzDvC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKF,UAAU,QACbL,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAQC,QAAQ,UAAUF,KAAK,UAC5BtC,KAAKqB,MAAME,QAAUxC,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAaS,KAAM,EAAGD,MAAO,0BAA6B,6CA1D5DiD,IAAMC,oECazB,IAAAC,EAAA,SAACd,GACd,IAAMe,EAA4B,GAClCf,EAAMgB,OAAOC,QAAQ,SAAAC,GACnBA,EAAMC,aAAaF,QAAQ,SAAAG,GACzBL,EAA0BM,KAAKD,EAAYE,iBAI/C,IAMIC,EANED,EAAcP,EAA0BS,QAzBhD,SAAiCC,GAC/B,IAAMC,EAAU,GAChBD,EAAIR,QAAQ,SAACU,GACXD,EAAQC,GAAQD,EAAQC,KAAUD,EAAQC,GAAQ,IAGpD,IAAIC,EAAQC,EAAM,EAClB,IAAK,IAAIC,KAAOJ,EACVA,EAAQI,GAAOD,IACjBA,EAAMH,EAAQI,GACdF,EAASE,GAIb,OAAOF,EAWiDG,CAAwBhB,GAA6B,KAEvGiB,EAAIjB,EAA0BS,OAChCS,EAAO,GAAO,EAAFD,EAIhB,OAHIC,EAAO,MAAKA,EAAO,KAGfX,GACN,KAAK,EACHC,EAAkB,yBAClB,MACF,KAAK,EACHA,EAAkB,0BAClB,MACF,KAAK,EACHA,EAAkB,yBAClB,MACF,KAAK,EACHA,EAAkB,0BAClB,MACF,QACEA,EAAkB,yBAItB,OACErE,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CACEI,UAAU,yDACV4E,MAAO,CACLC,OAAQH,EACRI,MAAOJ,EACPK,WAAYL,EAAK,EACjBM,YAAaN,EAAK,EAClBV,oBAGFrE,EAAAC,EAAAC,cAAA,QAAMG,UAAU,SAASyE,KC1DVQ,oNASnBhD,MAAQ,CACNiD,SAAU,MAGZC,WAAa,CACXC,OAAQH,EAAII,aAAaD,OACzBE,KAAML,EAAII,aAAaC,QAGzBC,YAAc,SAACJ,GACbK,EAAKL,WAAaA,EAClBK,EAAKC,eAAeD,EAAKL,2FAGZA,GACb,IAAMD,EAAWC,EAAWO,OACxB9E,KAAK+E,YAAYR,GAAYS,IAAI,SAAAlF,GAAA,IAAGmF,EAAHnF,EAAGmF,GAAIC,EAAPpF,EAAOoF,GAAIC,EAAXrF,EAAWqF,UAAWtC,EAAtB/C,EAAsB+C,OAAtB,MAAoC,CACnEuC,IAAKF,EACLG,IAAKJ,EACLE,YACAG,GAAE,GAAAC,OAAKJ,EAAL,KAAAI,OAAkB1C,EAAO,GAAGyC,IAC9BzC,YAEF,GACJ7C,KAAKwB,SAAS,CAAE8C,iDAGNC,GAEV,OADiBiB,IAAaxF,KAAK6B,MAAM4D,KAClCnB,CAASC,8CAGCmB,GAEbA,EAAUD,KAAKpC,SAAWrD,KAAK6B,MAAM4D,KAAKpC,QAAQrD,KAAK2E,YAAY3E,KAAKuE,6CAI5E,IAAMD,EAAWtE,KAAKqB,MAAMiD,SAASU,IAAI,SAAAW,GACvC,OACE5G,EAAAC,EAAAC,cAAC0D,EAAD,CACEgB,IAAKgC,EAAQL,GACbF,IAAKO,EAAQP,IACbC,IAAKM,EAAQN,IACbxC,OAAQ8C,EAAQ9C,WAKtB,OACE9D,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAWG,OAAK,EAACC,UAAU,wBACzBL,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CACE6G,iBAAkB,CAChBC,SAAU,KACVC,OAAQ,MAEVC,cAAe3B,EAAII,aAAaD,OAChCyB,YAAa5B,EAAII,aAAaC,KAC9BwB,SAAUlG,KAAK2E,YACfwB,QAAS,SAACC,GACR,MAAO,CACLC,kBAAkB,KAIrB/B,WA1EsB7B,IAAMC,YAAlB2B,EACZI,aAAe,CACpBD,OAAQ,CACNY,IAAK,MACLC,IAAK,OAEPX,KAAM,GCbV,IAGMhF,EAAMC,wEAEG2G,EAAA,SAAAzG,EAAA0G,GAAA,OAAAC,EAAAzG,MAAAC,KAAAC,uDAAA,SAAAC,EAAeuG,EAAMtG,GAArB,IAAAS,EAAAR,EAAA,OAAAC,EAAArB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTG,EAAU,CACZC,eAAgB,oBAIdV,IAAMS,EAAO,cAAoB,SAAW8F,KAAI,GAAAnB,OAAIpF,EAAKwG,MAAT,KAAApB,OAAkBpF,EAAKyG,YAN9DrG,EAAAE,KAAA,EAQGC,MAAMhB,EAAM+G,EAAM,CAChC9F,OAAQ,MACRC,YAVW,cAQTR,EARSG,EAAAU,KAAAV,EAAAW,OAAA,SAaNd,GAbM,wBAAAG,EAAAY,SAAAjB,6BCLf,IACM2G,EAAW,IADJC,OAAOC,OAAOX,KACDY,SAEXC,EAAA,SAAApH,GAAA,OAAAqH,EAAAnH,MAAAC,KAAAC,uDAAA,SAAAC,EAAgBuF,GAAhB,IAAA0B,EAAAC,EAAAvE,EAAAc,EAAA,OAAAtD,EAAArB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP0G,EAAW,GACXC,EAAW,GACjB3B,EAAK0B,SAASrE,QAAQ,SAACuE,GACrB,IAAM/B,EAAK+B,EAAO/B,GACZgC,EAAUD,EAAOE,OAAO,GACxBvE,EAAe,GACrBoE,EAASlE,KAAK,IAAIsE,QAAQ,SAACC,EAASC,GAClCb,EAASc,QAAQ,CAACL,QAAWA,EAASvB,OAAU,MAAO,SAAC6B,EAAShG,GAE/D,GAAe,OAAXA,EAAiB,CACnB,IAAMwD,EAAMwC,EAAQ,GAAGC,SAASC,SAAS1C,MACnCC,EAAMuC,EAAQ,GAAGC,SAASC,SAASzC,MACnC/C,EAAOsF,EAAQ,GAAGC,SAASE,cACpB,YAATzF,GAA+B,uBAATA,EACxB6E,EAAS7B,GAAM,CAACgC,UAASlC,MAAKC,MAAKrC,gBAEnCtB,QAAQC,IAAI,qBAAuB2F,EAAU,iBAI/C5F,QAAQC,IAAI2F,EAAS1F,GAIvB6F,WAzBOlH,EAAAE,KAAA,EA8BP+G,QAAQQ,IAAIZ,GA9BL,OAyCb,IAASzD,KART8B,EAAKzC,aAAaF,QAAQ,SAACG,GACzB,IAAMgF,EAAWhF,EAAYsE,OAAO,GAAG,GAAGW,SACpCtG,GAAUqB,EAAYsE,OAAO,GAAG,GAChCpE,GAAeF,EAAYsE,OAAO,IAAI,GACxCJ,EAASc,IAAWd,EAASc,GAAUjF,aAAaE,KAAK,CAACtB,SAAQuB,kBAGlEN,EAAS,GACCsE,EACdA,EAASxD,GAAK2B,GAAK3B,EACnBd,EAAOK,KAAKiE,EAASxD,IA3CV,OAAApD,EAAAW,OAAA,SA8CN2B,GA9CM,wBAAAtC,EAAAY,SAAAjB,iCCQMiI,6MACnB9G,MAAQ,CACN+G,cAAc,EACdC,OAAO,EACP9G,SAAS,EACTkE,KAAM,uFAUNzF,KAAKsI,oDAGOnI,GACZH,KAAKuI,QAAQpI,8JAIbH,KAAKwB,SAAS,CAAED,SAAS,aACP+E,EAAY,WACX,OADblG,UACEwB,OACN5B,KAAK8B,gBACmB,MAAf1B,EAAIwB,OACb5B,KAAKwB,SAAS,CAAED,SAAS,IAEzBvB,KAAKwI,QAAQpI,6KAIHD,oFACZA,EAAOsI,OAAOC,OAAO,GAAIvI,GACzBH,KAAKwB,SAAS,CAAED,SAAS,aAGP+E,EAAY,uBAAwBnG,sCAChCmG,EAAY,uBAAwBnG,sBAFpDwI,GACJxB,cACAnE,iCAGc2F,qDAAPhF,aACuB,MAA1BgF,EAAUhF,GAAK/B,yCAAuC+G,EAAUhF,GAAKiF,eAAtCD,EAAUhF,yCAE3C3D,KAAKwI,QAAQG,EAAUhF,wEAKRsD,EAAY0B,WAAzBlD,SAENzF,KAAKwB,SAAS,CAAE4G,cAAc,EAAO3C,OAAMlE,SAAS,IACpDG,QAAQC,IAAI,OAAQ3B,KAAKqB,MAAMoE,0IAGzBrF,GACNJ,KAAKwB,SAAS,CAAE6G,MAAOjI,qCAGhB,IAAA4B,EAAAhC,KACDyB,GAAQzB,KAAKqB,MAAME,SAAWvB,KAAKqB,MAAM+G,aAAerJ,EAAAC,EAAAC,cAAC4J,EAAD,CAAMlF,IAAI,OAAO7B,cAAe,SAAC3B,GAAD,OAAU6B,EAAKF,cAAc3B,MAAW,KAIlI2I,EAAU,CAHC9I,KAAKqB,MAAME,QAAUxC,EAAAC,EAAAC,cAACH,EAAD,CAAQ6E,IAAI,WAAa,KAGtClC,EAFX1C,EAAAC,EAAAC,cAAC8J,EAAD,CAAKpF,IAAI,MAAM8B,KAAMzF,KAAKqB,MAAMoE,QAK5C,OAFIzF,KAAKqB,MAAMgH,QAAOS,EAAU/J,EAAAC,EAAAC,cAAC+J,EAAD,CAAK5I,IAAKJ,KAAKqB,MAAMgH,SAE9CS,SArEsBpG,aAyE3BuG,EAAM,SAACpH,GACX,OACE9C,EAAAC,EAAAC,cAAA,cAAAsG,OAAS1D,EAAMzB,IAAIwB,OAAnB,KAAA2D,OAA6B1D,EAAMzB,IAAI8I,cClF3CC,IAASC,OAAOrK,EAAAC,EAAAC,cAACoK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3b7357d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport './style.css';\r\n\r\nexport default () => {\r\n  return (\r\n    <Container fluid className=\"waiter h-100 w-100 p-0 m-0 text-center\">\r\n      <Row className=\"h-100 w-100 p-0 m-0 align-items-center\">\r\n        <Col><PulseLoader color=\"gray\" size={10}/></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","const proxyURL = 'https://cors-anywhere.herokuapp.com/';\r\n// const proxyURL = '';\r\nconst targetURL = 'https://megapolis.bpium.ru/auth/login';\r\nconst URL = proxyURL + targetURL;\r\n\r\nexport default async function(user) {\r\n  let res = await fetch(URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  });\r\n\r\n  return res;\r\n}\r\n","import React from 'react';\r\nimport { Form, Text } from 'informed';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport './style.css';\r\n\r\nimport auth from '../../actions/auth.js';\r\n\r\nexport default class Auth extends React.Component {\r\n  state = {\r\n    authFailed: false,\r\n    waiting: false,\r\n  }\r\n\r\n  async sendAuthRequest(user) {\r\n    this.setState({ waiting: true });\r\n    let res = await auth(user);\r\n    this.setState({ waiting: false });\r\n\r\n    console.log(res);\r\n\r\n    if (res.status === 200) {\r\n      this.setState({ authFailed: false });\r\n      // this.props.onAuthSuccess();\r\n      this.props.onAuthSuccess(user);\r\n    } else if (res.status === 401) {\r\n      this.setState({ authFailed: true });\r\n    } else {\r\n      // вывести ошибку и выйти\r\n    }\r\n\r\n  }\r\n\r\n  onFormSubmit(user) {\r\n    if (this.state.waiting) return;\r\n    this.sendAuthRequest(user);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"auth h-100 w-100 p-0 m-0\">\r\n        <Row className=\"flex-column h-100 w-100 p-0 m-0 align-items-center justify-content-center\">\r\n        <Form\r\n          onSubmit={user => this.onFormSubmit(user)}\r\n          initialValues={{\r\n            // email: \"hmrfins@gmail.com\",\r\n            // password: \"hmrfbfacke\",\r\n          }}\r\n        >\r\n          <Col className=\"px-0\">\r\n            <label>\r\n              <Col className=\"px-0 mb-1\">Логин</Col>\r\n              <Col className=\"email px-0\"><Text field=\"email\" type=\"email\"/></Col>\r\n            </label>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <label>\r\n              <Col className=\"px-0 mb-1\">Пароль</Col>\r\n              <Col className=\"password px-0\"><Text field=\"password\" type=\"password\"/></Col>\r\n            </label>\r\n          </Col>\r\n          <Col className=\"warning px-0\">\r\n            {this.state.authFailed ? 'Неверный логин или пароль' : ''}\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <Button variant=\"success\" type=\"submit\">\r\n              {this.state.waiting ? <PulseLoader size={7} color={'rgba(255,255,255,0.7)'}/> : 'Войти'}\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './style.css';\r\n\r\nfunction getTheMostFrequentValue(arr) {\r\n  const counter = {};\r\n  arr.forEach((item) => {\r\n    counter[item] ? counter[item]++ : counter[item] = 1;\r\n  });\r\n\r\n  let maxKey, max = 0;\r\n  for (let key in counter) {\r\n    if (counter[key] > max) {\r\n      max = counter[key];\r\n      maxKey = key;\r\n    }\r\n  }\r\n\r\n  return maxKey;\r\n}\r\n\r\nexport default (props) => {\r\n  const applicationsCriticalities = [];\r\n  props.points.forEach(point => {\r\n    point.applications.forEach(application => {\r\n      applicationsCriticalities.push(application.criticality);\r\n    });\r\n  });\r\n\r\n  const criticality = applicationsCriticalities.length ? +getTheMostFrequentValue(applicationsCriticalities) : null;\r\n\r\n  const N = applicationsCriticalities.length;\r\n  let side = 20 + N*2;\r\n  if (side > 100) side = 100;\r\n\r\n  let backgroundColor;\r\n  switch (criticality) {\r\n    case 1:\r\n      backgroundColor = 'rgba(186, 57, 57, 0.8)';\r\n      break;\r\n    case 2:\r\n      backgroundColor = 'rgba(23, 217, 150, 0.8)';\r\n      break;\r\n    case 3:\r\n      backgroundColor = 'rgba(81, 175, 43, 0.8)';\r\n      break;\r\n    case 4:\r\n      backgroundColor = 'rgba(84, 213, 255, 0.8)';\r\n      break;\r\n    default:\r\n      backgroundColor = 'rgba(81, 175, 43, 0.8)';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className=\"cluster px-0 justify-content-center align-items-center\"\r\n      style={{\r\n        height: side,\r\n        width: side,\r\n        marginTop: -side/2,\r\n        marginLeft: -side/2,\r\n        backgroundColor,\r\n      }}\r\n    >\r\n      <span className=\"title\">{N}</span>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Supercluster from 'points-cluster';\r\nimport Marker from './Marker';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './style.css';\r\n\r\nexport default class Map extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 61.25,\r\n      lng: 73.38\r\n    },\r\n    zoom: 4\r\n  };\r\n\r\n  state = {\r\n    clusters: [],\r\n  };\r\n\r\n  mapOptions = {\r\n    center: Map.defaultProps.center,\r\n    zoom: Map.defaultProps.zoom,\r\n  };\r\n\r\n  onMapChange = (mapOptions) => {\r\n    this.mapOptions = mapOptions;\r\n    this.createClusters(this.mapOptions);\r\n  };\r\n\r\n  createClusters(mapOptions) {\r\n    const clusters = mapOptions.bounds\r\n      ? this.getClusters(mapOptions).map(({ wx, wy, numPoints, points }) => ({\r\n          lat: wy,\r\n          lng: wx,\r\n          numPoints,\r\n          id: `${numPoints}_${points[0].id}`,\r\n          points,\r\n        }))\r\n      : [];\r\n    this.setState({ clusters });\r\n  }\r\n\r\n  getClusters(mapOptions) {\r\n    const clusters = Supercluster(this.props.data);\r\n    return clusters(mapOptions);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // ..........\r\n    if (prevProps.data.length !== this.props.data.length) this.onMapChange(this.mapOptions);\r\n  }\r\n\r\n  render() {\r\n    const clusters = this.state.clusters.map(cluster => {\r\n      return (\r\n        <Marker\r\n          key={cluster.id}\r\n          lat={cluster.lat}\r\n          lng={cluster.lng}\r\n          points={cluster.points}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container fluid className=\"map h-100 w-100 px-0\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{\r\n            language: 'ru',\r\n            region: 'ru',\r\n          }}\r\n          defaultCenter={Map.defaultProps.center}\r\n          defaultZoom={Map.defaultProps.zoom}\r\n          onChange={this.onMapChange}\r\n          options={(maps) => {\r\n            return {\r\n              disableDefaultUI: true,\r\n            };\r\n          }}\r\n        >\r\n          {clusters}\r\n        </GoogleMapReact>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","const proxyURL = 'https://cors-anywhere.herokuapp.com/';\r\n// const proxyURL = '';\r\nconst targetURL = 'https://megapolis.bpium.ru/api/v1';\r\nconst URL = proxyURL + targetURL;\r\n\r\nexport default async function(path, user) {\r\n  let headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n  \r\n  //\r\n  if (user) headers[\"Authorization\"] = \"Basic \" + btoa(`${user.email}:${user.password}`);\r\n\r\n  let res = await fetch(URL + path, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n\r\n  return res;\r\n}\r\n","const maps = window.google.maps;\r\nconst geocoder = new maps.Geocoder();\r\n\r\nexport default async function (data) {\r\n  const branches = {};\r\n  const requests = [];\r\n  data.branches.forEach((branch) => {\r\n    const id = branch.id;\r\n    const address = branch.values[6];\r\n    const applications = [];\r\n    requests.push(new Promise((resolve, reject) => {\r\n      geocoder.geocode({'address': address, 'region': 'ru'}, (results, status) => {\r\n        // console.log(results, status);\r\n        if (status === 'OK') {\r\n          const lat = results[0].geometry.location.lat();\r\n          const lng = results[0].geometry.location.lng();\r\n          const type = results[0].geometry.location_type;\r\n          if (type === 'ROOFTOP' || type === 'RANGE_INTERPOLATED') {\r\n            branches[id] = {address, lat, lng, applications};\r\n          } else {\r\n            console.log('Incorrect address ' + address + ' skipped');\r\n          }\r\n          // resolve(status);\r\n        } else {\r\n          console.log(address, status);\r\n          // alert('Error: ' + status + ' while geocoding');\r\n          // reject(status);\r\n        }\r\n        resolve();\r\n      });\r\n    }));\r\n  });\r\n\r\n  await Promise.all(requests);\r\n\r\n  // console.log(data.applications);\r\n  data.applications.forEach((application) => {\r\n    const branchId = application.values[3][0].recordId;\r\n    const status = +application.values[5][0];\r\n    const criticality = +application.values[10][0];\r\n    if (branches[branchId]) branches[branchId].applications.push({status, criticality});\r\n  });\r\n\r\n  const points = [];\r\n  for (let key in branches) {\r\n    branches[key].id = key;\r\n    points.push(branches[key]);\r\n  }\r\n\r\n  return points;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Waiter from './Waiter';\r\nimport Auth from './Auth';\r\nimport Map from './Map';\r\n\r\nimport requestData from '../actions/requestData.js';\r\nimport convertData from '../actions/convertData.js';\r\n\r\n// import branches from '../testdata/branches.json';\r\n// import applications from '../testdata/applications.json';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    authRequired: true,\r\n    error: false,\r\n    waiting: false,\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    // (async test() => {\r\n    //   let data = await convertData({branches, applications});\r\n    //   console.log(data);\r\n    //   this.setState({ data });\r\n    // })();\r\n\r\n    this.checkAccess();\r\n  }\r\n\r\n  onAuthSuccess(user) {\r\n    this.getData(user);\r\n  }\r\n\r\n  async checkAccess() {\r\n    this.setState({ waiting: true });\r\n    const res = await requestData('');\r\n    if (res.status === 404) {\r\n      this.onAuthSuccess();\r\n    } else if (res.status === 401) {\r\n      this.setState({ waiting: false });\r\n    } else {\r\n      this.onError(res);\r\n    }\r\n  }\r\n\r\n  async getData(user) {\r\n    user = Object.assign({}, user);\r\n    this.setState({ waiting: true });\r\n\r\n    const responses = {\r\n      branches: await requestData('/catalogs/12/records', user),\r\n      applications: await requestData('/catalogs/11/records', user),\r\n    };\r\n\r\n    for (let key in responses) {\r\n      if (responses[key].status === 200) responses[key] = await responses[key].json();\r\n      else {\r\n        this.onError(responses[key]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const data = await convertData(responses);\r\n\r\n    this.setState({ authRequired: false, data, waiting: false });\r\n    console.log('data', this.state.data);\r\n  }\r\n\r\n  onError(res) {\r\n    this.setState({ error: res });\r\n  }\r\n\r\n  render() {\r\n    const auth = !this.state.waiting && this.state.authRequired ? <Auth key=\"auth\" onAuthSuccess={(user) => this.onAuthSuccess(user)}/> : null;\r\n    const waiter = this.state.waiting ? <Waiter key=\"waiter\"/> : null;\r\n    const map = <Map key=\"map\" data={this.state.data}/>;\r\n\r\n    let content = [waiter, auth, map];\r\n    if (this.state.error) content = <Err res={this.state.error}/>;\r\n\r\n    return content;\r\n  }\r\n}\r\n\r\nconst Err = (props) => {\r\n  return (\r\n    <div>{`${props.res.status} ${props.res.statusText}`}</div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
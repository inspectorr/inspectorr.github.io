{"version":3,"sources":["utils/enum.js","api/token.js","config.js","api/network.js","api/requests.js","contexts/NetworkContext.js","components/Login/index.js","contexts/utils/fields.js","contexts/DataContext.js","components/Table.js","components/Panel.js","components/Dashboard/tabs/Investments.js","components/Dashboard/tabs/Users.js","utils/toBase64.js","components/Dashboard/tabs/Products.js","components/EmailEditor/index.js","components/Dashboard/tabs/Email.js","components/Dashboard/index.js","App.js","index.js"],"names":["Enum","length","Array","map","_","i","getToken","window","localStorage","getItem","sessionStorage","setToken","token","remember","setItem","removeToken","removeItem","BASE_URL","POST","path","obj","a","url","body","JSON","stringify","headers","Headers","append","parameters","method","console","log","fetch","res","json","error","success","GET","login","password","checkAuth","getAllUsersWithInvestments","updateUser","id","data","deleteUser","getAllInvestments","confirmSale","getAllProducts","createProduct","updateProduct","deleteProduct","pushGainsAndCompute","getAllEmailTemplates","updateEmailTemplate","NetworkContext","createContext","loggedIn","onLogin","onLogout","onStartUp","ON_LOGIN","ON_LOGOUT","reducer","state","type","Login","useContext","actions","setErrors","useState","isShowingPass","setIsShowingPass","Container","style","height","initialValues","onSubmit","props","handleSubmit","Grid","container","direction","justify","alignItems","Box","Paper","marginBottom","margin","Typography","variant","FormControl","fullWidth","InputLabel","htmlFor","onChange","handleChange","onBlur","handleBlur","value","values","name","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","Visibility","VisibilityOff","Button","color","marginTop","errors","ListField","listGetter","creator","updater","deleter","getterById","resolver","this","isLoaded","load","_getList","getById","create","update","delete","default","ProductList","productId","newGain","newDate","UserList","contextShape","ProductType","InvestmentStatus","products","users","investments","templates","PRODUCTS","USERS","INVESTMENTS","TEMPLATES","action","DataContext","Table","options","showEmptyDataSourceMessage","emptyRowsWhenPaging","minBodyHeight","paging","detailPanelType","SubTable","search","showTitle","toolbar","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Panel","title","children","classes","ExpansionPanel","className","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Investments","loaded","setLoaded","useEffect","then","forEach","user","tableData","investmentColumns","field","columns","detailPanel","unconfirmedSales","filter","statusId","UNCONFIRMED_SALE","activeInvestments","ACTIVE_INVESTMENT","unconfirmedPurchases","UNCONFIRMED_PURCHASE","closedDeals","CONFIRMED_SALE","defaultExpanded","icon","CheckCircleIcon","tooltip","event","CircularProgress","spacing","Users","oldData","editable","onRowUpdate","onRowDelete","Input","inputProps","TextField","autoComplete","label","firstName","secondName","moment","birthDate","format","InputLabelProps","shrink","item","xs","birthPlace","citizenship","align","country","city","street","building","flat","Divider","RadioGroup","age","FormControlLabel","control","Radio","earningMoney","savings","experience","purpose","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","Products","typeId","productColumns","editComponent","accept","e","target","files","render","rowData","src","borderRadius","text","slice","locale","gainColumns","initialEditValue","Date","date","File","product","onRowAdd","detailPanelColumnAlignment","gainHistory","gain","modules","top","subjectInput","save","Index","initTemplate","template","initSubject","subject","fields","setTemplate","setSubject","sm","TabPanel","index","other","component","role","hidden","aria-labelledby","flexGrow","backgroundColor","palette","background","paper","Email","React","setValue","templatesData","sort","b","AppBar","newValue","indicatorColor","textColor","scrollButtons","Tab","EmailEditor","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","justifyContent","content","contentShift","logoutButton","INIT_TAB","Dashboard","open","setOpen","tab","setTab","Tabs","portfels","PORTFEL","funds","FUND","transactions","mail","CssBaseline","clsx","Toolbar","edge","noWrap","SwipeableDrawer","anchor","MenuList","useMemo","itemTab","ListItem","key","selected","button","ListItemIcon","ListItemText","primary","PrivateRoute","Component","accessed","rest","to","App","isNetworkReady","setIsNetworkReady","dispatch","initialState","useReducer","network","useNetwork","useApplicationData","Provider","LinearProgress","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.86b4b3db.chunk.js","sourcesContent":["const Enum = (length) => [...Array(length)].map((_, i) => i);\r\nexport default Enum;","export const getToken = () => {\r\n  return window.localStorage.getItem('token') || window.sessionStorage.getItem('token');\r\n};\r\n\r\nexport const setToken = (token, remember) => {\r\n  if (remember) {\r\n    window.localStorage.setItem('token', token);\r\n  } else {\r\n    window.sessionStorage.setItem('token', token);\r\n  }\r\n};\r\n\r\nexport const removeToken = () => {\r\n  window.localStorage.removeItem('token');\r\n  window.sessionStorage.removeItem('token');\r\n};\r\n","export const BASE_URL = 'https://nfond.cyberwhale.tech';\r\n","import {BASE_URL} from \"../config\";\r\nimport {getToken} from \"./token\";\r\n\r\nexport const POST = async (path, obj) => {\r\n  const url = BASE_URL + path;\r\n\r\n  const body = JSON.stringify(obj) ;\r\n\r\n  const headers = new Headers();\r\n  headers.append('Content-Type', 'application/json');\r\n\r\n  const token = getToken();\r\n  if (token) {\r\n    headers.append('Authorization', token);\r\n  }\r\n\r\n  const parameters = {\r\n    method: 'POST',\r\n    headers,\r\n    body,\r\n  };\r\n\r\n  console.log('POST request', url, parameters, obj);\r\n\r\n  try {\r\n    const res = await fetch(url, parameters);\r\n    const body = await res.json();\r\n    console.log('POST response', res, body);\r\n    return body;\r\n  } catch (error) {\r\n    console.error('POST error', error);\r\n    return {success: false, error};\r\n  }\r\n};\r\n\r\nexport const GET = async (path) => {\r\n  const url = BASE_URL + path;\r\n\r\n  const headers = new Headers();\r\n  headers.append('Content-Type', 'application/json');\r\n  const token = getToken();\r\n  if (token) {\r\n    headers.append('Authorization', token);\r\n  }\r\n\r\n  const parameters = {\r\n    method: 'GET',\r\n    headers,\r\n  };\r\n\r\n  console.log('GET request', url, parameters);\r\n\r\n  try {\r\n    const res = await fetch(url, parameters);\r\n    const body = await res.json();\r\n    console.log('GET response', res, body);\r\n    return body;\r\n  } catch (error) {\r\n    console.error('GET error', error);\r\n    return {success: false, error};\r\n  }\r\n};\r\n","import {GET, POST} from \"./network\";\r\n\r\nexport async function login({password}) {\r\n  return await POST('/api/auth/admin', {password});\r\n}\r\n\r\nexport async function checkAuth() {\r\n  return await GET('/api/auth/checkAuth');\r\n}\r\n\r\nexport async function getAllUsers() {\r\n  return await GET('/api/user/getAll');\r\n}\r\n\r\nexport async function getAllUsersWithInvestments() {\r\n  return await GET('/api/user/getAllWithInvestments');\r\n}\r\n\r\nexport async function updateUser(id, data) {\r\n  return await POST(`/api/user/update/${id}`, data);\r\n}\r\n\r\nexport async function deleteUser(id) {\r\n  return await GET(`/api/user/delete/${id}`);\r\n}\r\n\r\nexport async function getAllInvestments() {\r\n  return await GET('/api/investment/getAll');\r\n}\r\n\r\nexport async function getInvestmentStatusEnum() {\r\n  return await GET('/api/investment/status');\r\n}\r\n\r\n// async function confirmPurchase(id) {\r\n//   return await GET(`/api/investment/confirmPurchase${id}`);\r\n// }\r\n\r\nexport async function confirmSale(id) {\r\n  return await GET(`/api/investment/confirmSale/${id}`);\r\n}\r\n\r\nexport async function getProductTypeEnum() {\r\n  return await GET('/api/product/type');\r\n}\r\n\r\nexport async function getAllProducts() {\r\n  return await GET('/api/product/getAll');\r\n}\r\n\r\nexport async function createProduct(obj) {\r\n  return await POST('/api/product/create', obj);\r\n}\r\n\r\nexport async function updateProduct(id, obj) {\r\n  return await POST(`/api/product/update/${id}`, obj);\r\n}\r\n\r\nexport async function deleteProduct(id) {\r\n  return await GET(`/api/product/delete/${id}`);\r\n}\r\n\r\nexport async function pushGainsAndCompute(obj) {\r\n  return await POST('/api/product/pushGainsAndCompute', obj);\r\n}\r\n\r\nexport async function getAllEmailTemplates() {\r\n  return await GET('/api/emailTemplate/getAll');\r\n}\r\n\r\nexport async function updateEmailTemplate(id, data) {\r\n  return await POST(`/api/emailTemplate/update/${id}`, data);\r\n}\r\n","import {useReducer, createContext, useState} from \"react\";\r\nimport Enum from \"../utils/enum\";\r\nimport {getToken, removeToken, setToken} from \"../api/token\";\r\nimport {checkAuth} from \"../api/requests\";\r\n\r\nconst contextShape = {\r\n  loggedIn: false,\r\n  onLogin: () => {},\r\n  onLogout: () => {},\r\n  onStartUp: () => {},\r\n};\r\n\r\nconst NetworkContext = createContext(contextShape);\r\n\r\nconst [\r\n  ON_LOGIN, ON_LOGOUT\r\n] = Enum(2);\r\n\r\nfunction reducer(state, {type}) {\r\n  switch (type) {\r\n    case ON_LOGIN:\r\n      return {...state, loggedIn: true};\r\n    case ON_LOGOUT:\r\n      return {...state, loggedIn: false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function useNetwork() {\r\n  const [isNetworkReady, setIsNetworkReady] = useState(false);\r\n\r\n  function onLogin(token) {\r\n    setToken(token);\r\n    dispatch({type: ON_LOGIN});\r\n  }\r\n\r\n  function onLogout() {\r\n    removeToken();\r\n    dispatch({type: ON_LOGOUT})\r\n  }\r\n\r\n  async function onStartUp() {\r\n    const token = getToken();\r\n    if (token) {\r\n      const {success} = await checkAuth();\r\n      if (success) {\r\n        onLogin(token);\r\n      }\r\n    }\r\n    setIsNetworkReady(true);\r\n  }\r\n\r\n  const initialState = {\r\n    loggedIn: false,\r\n    onLogin,\r\n    onLogout,\r\n    onStartUp,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return {isNetworkReady, network:state};\r\n}\r\n\r\nexport default NetworkContext;\r\n","import React, {useContext, useState} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport {Input, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {login} from \"../../api/requests\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NetworkContext from \"../../contexts/NetworkContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n\r\nfunction Login() {\r\n  const {onLogin} = useContext(NetworkContext);\r\n\r\n  async function onSubmit({password}, actions) {\r\n    const {success, token, error} = await login({password});\r\n    if (success) {\r\n      onLogin(token);\r\n    } else {\r\n      actions.setErrors({error})\r\n    }\r\n  }\r\n\r\n  const [isShowingPass, setIsShowingPass] = useState(false);\r\n\r\n  return (\r\n    <Container style={{height: '100%'}}>\r\n      <Formik\r\n        initialValues={{}}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {props => (\r\n          <form onSubmit={props.handleSubmit} style={{height: '100%'}}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{height: '100%'}}\r\n            >\r\n                <Box>\r\n                  <Paper style={{marginBottom: '0.5rem'}}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <SupervisorAccountIcon style={{margin: '0 0.5rem'}}/>\r\n                      <Typography variant=\"h6\">Администратор</Typography>\r\n                    </Grid>\r\n                  </Paper>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n                    <Input\r\n                      id={\"standard-adornment-password\"}\r\n                      type={isShowingPass ? \"text\" : \"password\"}\r\n                      onChange={props.handleChange}\r\n                      onBlur={props.handleBlur}\r\n                      value={props.values.password}\r\n                      name=\"password\"\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={() => setIsShowingPass(!isShowingPass)}\r\n                          >\r\n                            {isShowingPass ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    style={{marginTop: '1rem'}}\r\n                  >\r\n                    ВОЙТИ\r\n                  </Button>\r\n                </Box>\r\n                {props.errors.error && <Box>\r\n                  <Typography variant=\"h6\" color=\"error\">\r\n                    Неверный пароль\r\n                  </Typography>\r\n                </Box>\r\n                }\r\n              </Grid>\r\n\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {confirmSale, pushGainsAndCompute} from \"../../api/requests\";\r\n\r\nexport class ListField {\r\n  constructor({\r\n    listGetter=()=>{},\r\n    creator=()=>{},\r\n    updater=()=>{},\r\n    deleter = () => {},\r\n    getterById = () => {},\r\n    resolver=()=>{},\r\n  }) {\r\n    this.data = [];\r\n    this.isLoaded = false;\r\n\r\n    this.load = async () => {\r\n      if (this.isLoaded) return true;\r\n      await this._getList();\r\n      return this.isLoaded = true;\r\n    };\r\n\r\n    this._getList = async () => {\r\n      this.data = await listGetter();\r\n      resolver({...this});\r\n    };\r\n\r\n    this.getById = async (id) => {\r\n      return await getterById(id);\r\n    };\r\n\r\n    this.create = async (data) => {\r\n      await creator(data);\r\n      await this._getList();\r\n    };\r\n\r\n    this.update = async (id, data) => {\r\n      await updater(id, data);\r\n      await this._getList();\r\n    };\r\n\r\n    this.delete = async (id) => {\r\n      await deleter(id);\r\n      await this._getList();\r\n    };\r\n  }\r\n\r\n  static default = {\r\n    data: {},\r\n    isLoaded: false,\r\n    load: () => {},\r\n    _getList: () => {},\r\n    getById: () => {},\r\n    create: () => {},\r\n    update: () => {},\r\n    delete: () => {},\r\n  };\r\n}\r\n\r\nexport class ProductList extends ListField {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pushGainsAndCompute = async ({productId, newGain, newDate}) => {\r\n      await pushGainsAndCompute({productId, newGain, newDate});\r\n      await this._getList();\r\n    };\r\n  }\r\n\r\n  static default = {\r\n    ...ListField.default,\r\n    pushGainsAndCompute: () => {},\r\n  }\r\n}\r\n\r\nexport class UserList extends ListField {\r\n  constructor(props) {\r\n    super(props);\r\n    this.confirmSale = async (id) => {\r\n      await confirmSale(id);\r\n      await this._getList();\r\n    };\r\n  }\r\n\r\n  static default = {\r\n    ...ListField.default,\r\n    confirmSale: () => {},\r\n  }\r\n}\r\n\r\n////и т д\r\n","import {useReducer, createContext, useEffect, useState} from \"react\";\r\nimport {InvestmentList, ListField, ProductList, UserList} from \"./utils/fields\";\r\nimport Enum from \"../utils/enum\";\r\nimport {\r\n  createProduct, deleteProduct, deleteUser, getAllEmailTemplates,\r\n  getAllInvestments,\r\n  getAllProducts,\r\n  getAllUsers, getAllUsersWithInvestments,\r\n  getInvestmentStatusEnum,\r\n  getProductTypeEnum, updateEmailTemplate, updateProduct, updateUser\r\n} from \"../api/requests\";\r\n\r\nconst contextShape = {\r\n  ProductType: {},\r\n  InvestmentStatus: {},\r\n  products: ListField.default,\r\n  users: ListField.default,\r\n  investments: ListField.default,\r\n  templates: ListField.default,\r\n};\r\n\r\nconst [PRODUCTS, USERS, INVESTMENTS, TEMPLATES] = Enum(3);\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case PRODUCTS:\r\n      return {...state, products: action.products};\r\n    case USERS:\r\n      return {...state, users: action.users};\r\n    case INVESTMENTS:\r\n      return {...state, investments: action.investments};\r\n    case TEMPLATES:\r\n      return {...state, templates: action.templates};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst DataContext = createContext(contextShape);\r\n\r\nexport function useApplicationData() {\r\n  const ProductType = {\r\n    \"PORTFEL\": 1,\r\n    \"FUND\": 2\r\n  };\r\n\r\n  const InvestmentStatus = {\r\n    \"UNCONFIRMED_PURCHASE\": 1,\r\n    \"ACTIVE_INVESTMENT\": 2,\r\n    \"UNCONFIRMED_SALE\": 3,\r\n    \"CONFIRMED_SALE\": 4\r\n  };\r\n\r\n  const products = new ProductList({\r\n    listGetter: getAllProducts,\r\n    creator: createProduct,\r\n    deleter: deleteProduct,\r\n    updater: updateProduct,\r\n    resolver: (products) => dispatch({type: PRODUCTS, products})\r\n  });\r\n\r\n  const investments = new ListField({\r\n    listGetter: getAllInvestments,\r\n    resolver: (investments) => dispatch({type: INVESTMENTS, investments})\r\n  });\r\n\r\n  const users = new UserList({\r\n    listGetter: getAllUsersWithInvestments,\r\n    updater: updateUser,\r\n    deleter: deleteUser,\r\n    resolver: (users) => dispatch({type: USERS, users})\r\n  });\r\n\r\n  const templates = new ListField({\r\n    listGetter: getAllEmailTemplates,\r\n    updater: updateEmailTemplate,\r\n    resolver: (templates) => dispatch({type: TEMPLATES, templates})\r\n  });\r\n\r\n  const initialState = {\r\n    ProductType, InvestmentStatus, products, investments, users, templates,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return state;\r\n}\r\n\r\nexport default DataContext;\r\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nexport function Table({options, ...props}) {\r\n  return (\r\n    <MaterialTable\r\n      options={{\r\n        showEmptyDataSourceMessage: false,\r\n        emptyRowsWhenPaging: false,\r\n        minBodyHeight: 0,\r\n        paging: false,\r\n        detailPanelType: 'single',\r\n        ...options\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport function SubTable({options, ...props}) {\r\n  return (\r\n    <Table\r\n      options={{\r\n        search: false,\r\n        showTitle: false,\r\n        toolbar: false,\r\n        ...options\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(17),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction Panel({title, children, ...props}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ExpansionPanel className={classes.root} {...props}>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography className={classes.heading}>{title}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport default Panel;\r\n","import React, {useContext, useEffect, useMemo, useState} from \"react\";\r\nimport {Box, Container} from \"@material-ui/core\";\r\nimport DataContext from \"../../../contexts/DataContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {Table, SubTable} from \"../../Table\";\r\nimport Panel from \"../../Panel\";\r\n\r\nfunction Investments() {\r\n  const {InvestmentStatus, users} = useContext(DataContext);\r\n  const [loaded, setLoaded] = useState(users.isLoaded);\r\n  useEffect(() => {\r\n    if (!users.isLoaded) {\r\n      users.load().then(setLoaded);\r\n    }\r\n  }, []);\r\n\r\n  // wtf)))\r\n  useEffect(() => {\r\n    return () => {\r\n      users.data.forEach((user) => {\r\n        delete user.tableData;\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const userColumns = [\r\n    {title: 'ID', field: 'id'},\r\n    {title: 'Имя', field: 'firstName'},\r\n    {title: 'Фамилия', field: 'secondName'},\r\n    {title: 'Баланс', field: 'balance'},\r\n    {title: 'Тр. баланс', field: 'transactionBalance'},\r\n  ];\r\n\r\n  const investmentColumns = [\r\n    {title: 'Продукт', field: 'productId'},\r\n    {title: 'Цена', field: 'initSum'},\r\n    {title: 'Стоимость', field: 'currentSum'},\r\n    {title: 'Дата', field: 'createdAt', type: 'datetime'},\r\n    {title: 'Подтверждена пользователем', field: 'userConfirmed', type: 'boolean'},\r\n    {title: 'Подтверждена администратором', field: 'adminConfirmed', type: 'boolean'}\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {loaded ?\r\n        (\r\n          <Table\r\n            title=\"Инвестиции пользователей\"\r\n            columns={userColumns}\r\n            data={users.data}\r\n            detailPanel={function InvestmentDetails({investments}) {\r\n\r\n              const unconfirmedSales = investments.filter(({statusId}) => statusId === InvestmentStatus.UNCONFIRMED_SALE);\r\n              const activeInvestments = investments.filter(({statusId}) => statusId === InvestmentStatus.ACTIVE_INVESTMENT);\r\n              const unconfirmedPurchases = investments.filter(({statusId}) => statusId === InvestmentStatus.UNCONFIRMED_PURCHASE);\r\n              const closedDeals = investments.filter(({statusId}) => statusId === InvestmentStatus.CONFIRMED_SALE);\r\n\r\n              return (\r\n                <>\r\n                  <Panel title={'Ожидают подтверждения на продажу'} defaultExpanded={unconfirmedSales.length > 0}>\r\n                    <SubTable\r\n                      columns={investmentColumns}\r\n                      data={unconfirmedSales}\r\n                      actions={[{\r\n                        icon: CheckCircleIcon,\r\n                        tooltip: 'Подтвердить продажу',\r\n                        onClick: async (event, {id}) => await users.confirmSale(id),\r\n                      }]}\r\n                    />\r\n                  </Panel>\r\n                  <Panel title={'Активные инвестиции'} defaultExpanded={activeInvestments.length > 0}>\r\n                    <SubTable\r\n                      columns={investmentColumns}\r\n                      data={activeInvestments}\r\n                    />\r\n                  </Panel>\r\n                  <Panel title={'Неподтвержденные покупки'} defaultExpanded={unconfirmedPurchases.length > 0}>\r\n                    <SubTable\r\n                      columns={investmentColumns}\r\n                      data={unconfirmedPurchases}\r\n                    />\r\n                  </Panel>\r\n                  <Panel title={'Завершенные сделки'} defaultExpanded={closedDeals.length > 0}>\r\n                    <SubTable\r\n                      columns={investmentColumns}\r\n                      data={closedDeals}\r\n                    />\r\n                  </Panel>\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n        ) : (\r\n          <CircularProgress />\r\n        )\r\n      }\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Investments;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Container, Input, Typography} from \"@material-ui/core\";\r\nimport DataContext from \"../../../contexts/DataContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {Table} from \"../../Table\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Formik} from \"formik\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Users() {\r\n  const {users} = useContext(DataContext);\r\n  const [loaded, setLoaded] = useState(users.isLoaded);\r\n  useEffect(() => {\r\n    if (!users.isLoaded) {\r\n      users.load().then(setLoaded);\r\n    }\r\n  }, []);\r\n\r\n  const columns = [\r\n    {title: 'ID', field: 'id', editable: 'never'},\r\n    {title: 'Email', field: 'email'},\r\n    {title: 'Верифицирован', field: 'verified', type: 'boolean'},\r\n    {title: 'Баланс', field: 'balance'},\r\n    {title: 'Тр. баланс', field: 'transactionBalance', editable: 'never'},\r\n    // {title: 'Имя', field: 'firstName'},\r\n    // {title: 'Фамилия', field: 'secondName'},\r\n    // {title: 'Адрес', field: 'address'},\r\n    // {title: 'Телефон', field: 'phone'},\r\n    // {title: 'Страна', field: 'country'},\r\n  ];\r\n\r\n  async function onUserUpdate(data, oldData) {\r\n    await users.update(data.id, data);\r\n  }\r\n\r\n  async function onUserDelete(data) {\r\n    await users.delete(data.id);\r\n  }\r\n\r\n  function onSubmit() {\r\n\r\n  }\r\n\r\n  // wtf)))\r\n  useEffect(() => {\r\n    return () => {\r\n      users.data.forEach((user) => {\r\n        delete user.tableData;\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      {loaded ?\r\n        (\r\n          <Table\r\n            title={'Пользователи'}\r\n            columns={columns}\r\n            data={users.data}\r\n            editable={{\r\n              onRowUpdate: onUserUpdate,\r\n              onRowDelete: onUserDelete,\r\n            }}\r\n            detailPanel={(user) => {\r\n              return (\r\n                <Box>\r\n                  <Formik\r\n                    initialValues={user}\r\n                    onSubmit={onSubmit}\r\n                  >\r\n                    {props => {\r\n\r\n                      const {values} = props;\r\n\r\n                      const Input = (inputProps) => (\r\n                        <TextField\r\n                          id=\"margin-dense\"\r\n                          onChange={props.handleChange}\r\n                          onBlur={props.handleBlur}\r\n                          type=\"text\"\r\n                          {...inputProps}\r\n                        />\r\n                      );\r\n\r\n                      return (\r\n                        <form className={classes.root} onSubmit={props.handleSubmit} autoComplete=\"off\">\r\n                          <Grid container>\r\n                            <Input\r\n                              name=\"firstName\"\r\n                              label=\"Имя\"\r\n                              value={values.firstName}\r\n                            />\r\n                            <Input\r\n                              name=\"secondName\"\r\n                              label=\"Фамилия\"\r\n                              value={values.secondName}\r\n                            />\r\n                            <Input\r\n                              name=\"birthDate\"\r\n                              label=\"Дата рождения\"\r\n                              type=\"date\"\r\n                              value={moment(values.birthDate).format(\"YYYY-MM-DD\")}\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Grid item xs={3}>\r\n                              <Input\r\n                                name=\"birthPlace\"\r\n                                label=\"Место рождения\"\r\n                                value={values.birthPlace}\r\n                                fullWidth\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <Input\r\n                                name=\"citizenship\"\r\n                                label=\"Гражданство (подданство)\"\r\n                                value={values.citizenship}\r\n                                style={{\r\n                                  width: 400\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container direction=\"row\" alignItems=\"center\">\r\n                            <Grid item justify=\"center\" alignItems=\"center\" xs={3}>\r\n                              <Typography align=\"center\" variant=\"h6\">Место жительства</Typography>\r\n                              <Typography align=\"center\">(регистрации)</Typography>\r\n                            </Grid>\r\n                            <Grid item justify=\"center\" alignItems=\"left\" xs={9}>\r\n                              <Input\r\n                                name=\"country\"\r\n                                label=\"Страна\"\r\n                                value={values.country}\r\n                                fullWidth\r\n                              />\r\n                              <Input\r\n                                name=\"city\"\r\n                                label=\"Населенный пункт\"\r\n                                value={values.city}\r\n                                fullWidth\r\n                              />\r\n                              <Input\r\n                                name=\"street\"\r\n                                label=\"Улица (проспект и т.д.)\"\r\n                                value={values.street}\r\n                                fullWidth\r\n                              />\r\n                              <Input\r\n                                name=\"building\"\r\n                                label=\"Дом, строение\"\r\n                                value={values.building}\r\n                                fullWidth\r\n                              />\r\n                              <Input\r\n                                name=\"flat\"\r\n                                label=\"Квартира (офис)\"\r\n                                value={values.flat}\r\n                                fullWidth\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid container alignItems=\"center\" direction=\"row\">\r\n                            <Grid item xs={3}>\r\n                              <Typography align=\"center\" variant=\"h6\">Возраст</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <RadioGroup name=\"age\" value={values.age} onChange={props.handleChange}>\r\n                                <FormControlLabel value=\"under20\" control={<Radio color=\"primary\" />} label=\"до 20 лет\" />\r\n                                <FormControlLabel value=\"from20to50\" control={<Radio color=\"primary\" />} label=\"от 20 до 50 лет\" />\r\n                                <FormControlLabel value=\"over50\" control={<Radio color=\"primary\" />} label=\"старше 50 лет\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid container alignItems=\"center\" direction=\"row\">\r\n                            <Grid item xs={3}>\r\n                              <Typography align=\"center\" style={{fontSize: '0.8rem'}} variant=\"h6\">\r\n                                Соотношение примерных среднемесячных доходов и среднемесячных расходов за последние 12 месяцев\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <RadioGroup name=\"earningMoney\" value={values.earningMoney} onChange={props.handleChange}>\r\n                                <FormControlLabel value=\"yes\" control={<Radio color=\"primary\" />} label=\"среднемесячные доходы больше среднемесячных расходов\" />\r\n                                <FormControlLabel value=\"no\" control={<Radio color=\"primary\" />} label=\"среднемесячные доходы меньше среднемесячных расходов\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid container alignItems=\"center\" direction=\"row\">\r\n                            <Grid item xs={3}>\r\n                              <Typography align=\"center\" variant=\"h6\">Сбережения</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <RadioGroup name=\"savings\" value={values.savings} onChange={props.handleChange}>\r\n                                <FormControlLabel value=\"more\" control={<Radio color=\"primary\" />} label=\"сбережения превышают стоимость активов,  инвестируемых в фонд\" />\r\n                                <FormControlLabel value=\"notMore\" control={<Radio color=\"primary\" />} label=\"сбережения не превышают стоимость активов,  инвестируемых в фонд\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid container alignItems=\"center\" direction=\"row\">\r\n                            <Grid item xs={3}>\r\n                              <Typography align=\"center\" style={{fontSize: '1rem'}} variant=\"h6\">Опыт (знания) Клиента в области инвестирования</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <RadioGroup name=\"experience\" value={values.experience} onChange={props.handleChange}>\r\n                                <FormControlLabel value=\"from3\" control={<Radio color=\"primary\" />} label=\"большой (от 3 лет)\" />\r\n                                <FormControlLabel value=\"from1to3\" control={<Radio color=\"primary\" />} label=\"средний (от 1 до 3 лет)\" />\r\n                                <FormControlLabel value=\"under1\" control={<Radio color=\"primary\" />} label=\"незначительный (до 1 года)\" />\r\n                                <FormControlLabel value=\"none\" control={<Radio color=\"primary\" />} label=\"отсутствует\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid container alignItems=\"center\" direction=\"row\">\r\n                            <Grid item xs={3}>\r\n                              <Typography align=\"center\" style={{fontSize: '1rem'}} variant=\"h6\">Инвестиционные цели Клиента</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                              <RadioGroup name=\"purpose\" value={values.purpose} onChange={props.handleChange}>\r\n                                <FormControlLabel value=\"protect\" control={<Radio color=\"primary\" />} label=\"защита капитала (минимум риска)\" />\r\n                                <FormControlLabel value=\"smallProfit\" control={<Radio color=\"primary\" />} label=\"получение дохода (небольшие риски)\" />\r\n                                <FormControlLabel value=\"mediumProfit\" control={<Radio color=\"primary\" />} label=\"получение существенного дохода (периодические риски)\" />\r\n                                <FormControlLabel value=\"maxProfit\" control={<Radio color=\"primary\" />} label=\"получение максимального дохода (значительные риски)\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </form>\r\n                      );\r\n                    }}\r\n                  </Formik>\r\n                </Box>\r\n              )\r\n            }}\r\n          />\r\n        ) : (\r\n          <CircularProgress />\r\n        )\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","const toBase64 = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = error => reject(error);\r\n});\r\n\r\nexport default toBase64;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport DataContext from \"../../../contexts/DataContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {Table} from \"../../Table\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport toBase64 from \"../../../utils/toBase64\";\r\nimport moment from \"moment\";\r\n\r\nfunction Products({title, typeId}) {\r\n  const { products } = useContext(DataContext);\r\n  const [loaded, setLoaded] = useState(products.isLoaded);\r\n  useEffect(() => {\r\n    if (!products.isLoaded) {\r\n      products.load().then(setLoaded);\r\n    }\r\n  }, []);\r\n\r\n  const productColumns = [\r\n    {title: 'ID', field: 'id', editable: 'never'},\r\n    {title: 'Название', field: 'name'},\r\n    {\r\n      title: 'Иконка',\r\n      field: 'icon',\r\n      editComponent: props => (\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={e => {\r\n            props.onChange(e.target.files[0]);\r\n          }}\r\n        />\r\n      ),\r\n      render: rowData => <img src={rowData.icon} style={{width: 50, borderRadius: '100%'}}/>\r\n    },\r\n    {\r\n      title: 'Описание',\r\n      field: 'text',\r\n      editComponent: props => (\r\n        <textarea\r\n          value={props.value}\r\n          onChange={e => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n      render: ({text}) => text.slice(0, 25) + '...',\r\n    },\r\n    {title: 'Комментарий', field: 'comment'},\r\n    {title: 'Мин. цена', field: 'minPrice'},\r\n    {title: 'В год (%)', field: 'gainPerYearPercents', type: 'numeric'},\r\n    {title: 'Текст по ширине?', field: 'justifyText', type: 'boolean'},\r\n    {title: 'Порядок отображения', field: 'displayOrder', type: 'numeric'},\r\n  ];\r\n\r\n  moment.locale('ru');\r\n\r\n  const gainColumns = [\r\n    {\r\n      title: 'Дата',\r\n      field: 'date',\r\n      type: 'date',\r\n      initialEditValue: new Date(),\r\n      render: ({date}) => moment(date).locale('ru').format('LLLL'),\r\n    },\r\n    {title: 'Рост (%)', field: 'gain', type: 'numeric'},\r\n  ];\r\n\r\n  async function onProductAdd(data) {\r\n    if (data.icon instanceof File) data.icon = await toBase64(data.icon);\r\n    await products.create({...data, typeId});\r\n  }\r\n\r\n  async function onProductUpdate(data) {\r\n    if (data.icon instanceof File) data.icon = await toBase64(data.icon);\r\n    await products.update(data.id, data);\r\n  }\r\n\r\n  async function onProductDelete(data) {\r\n    await products.delete(data.id);\r\n  }\r\n\r\n  return loaded ? (\r\n    <Table\r\n      title={title}\r\n      columns={productColumns}\r\n      data={products.data.filter((product) => product.typeId === typeId)}\r\n      editable={{\r\n        onRowAdd: onProductAdd,\r\n        onRowUpdate: onProductUpdate,\r\n        onRowDelete: onProductDelete,\r\n      }}\r\n      options={{\r\n        detailPanelColumnAlignment: 'left',\r\n        detailPanelType: 'single',\r\n      }}\r\n      detailPanel={({id, gainHistory}) => {\r\n        return (\r\n          <Box>\r\n            <Table\r\n              title=\"Рассчет прибыли\"\r\n              columns={gainColumns}\r\n              data={gainHistory}\r\n              editable={{\r\n                onRowAdd: ({gain, date}) => products.pushGainsAndCompute({productId: id, newGain: gain, newDate: date}),\r\n              }}\r\n              options={{\r\n                search: false,\r\n              }}\r\n              style={{\r\n                width: 600,\r\n              }}\r\n            />\r\n          </Box>\r\n        );\r\n      }\r\n      }\r\n    />\r\n  ) : (\r\n    <CircularProgress />\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React, {useContext, useState} from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport './quill.snow.css';\r\nimport './editor.css';\r\nimport DataContext from \"../../contexts/DataContext\";\r\nimport {Box, makeStyles} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, false] }],\r\n    ['bold', 'italic', 'underline'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}],\r\n    [{'align': []}],\r\n    [{container: '#'}]\r\n  ],\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  top: {\r\n    margin: '0.5rem 0'\r\n  },\r\n  subjectInput: {\r\n\r\n  },\r\n  save: {\r\n    margin: '0.5rem 0'\r\n  },\r\n}));\r\n\r\nfunction Index({id, template:initTemplate, subject:initSubject, fields}) {\r\n  const {templates} = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const [template, setTemplate] = useState(initTemplate);\r\n  const [subject, setSubject] = useState(initSubject);\r\n\r\n  async function onSubmit() {\r\n    await templates.update(id, {subject, template});\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid\r\n        container\r\n        className={classes.top}\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid container item xs={12} sm={6} justify=\"center\">\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Тема письма\"\r\n            value={subject}\r\n            onChange={(e) => setSubject(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={6} justify=\"center\">\r\n          <Typography variant=\"p\" >\r\n            доступные поля: {fields}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Box>\r\n        <ReactQuill\r\n          value={template}\r\n          modules={modules}\r\n          onChange={(text) => setTemplate(text)}\r\n        />\r\n      </Box>\r\n      <Button\r\n        className={classes.save}\r\n        onClick={onSubmit}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Container} from \"@material-ui/core\";\r\nimport DataContext from \"../../../contexts/DataContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EmailEditor from \"../../EmailEditor\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    height: '40rem',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Email() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const {templates} = useContext(DataContext);\r\n  const [loaded, setLoaded] = useState(templates.isLoaded);\r\n  useEffect(() => {\r\n    if (!templates.isLoaded) {\r\n      templates.load().then(setLoaded);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const templatesData = [...templates.data].sort((a, b) => a.id - b.id);\r\n\r\n  return (\r\n    loaded ? (\r\n      <Container className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            {templatesData.map(({name}, i) => (\r\n              <Tab label={name} {...a11yProps(i)}/>\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n        {templatesData.map((template, i) => (\r\n          <TabPanel index={i} value={value}>\r\n            <EmailEditor {...template}/>\r\n          </TabPanel>\r\n        ))}\r\n      </Container>\r\n    ) : (\r\n      <CircularProgress />\r\n      )\r\n  );\r\n}\r\n","import React, {useContext, useMemo, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport Investments from \"./tabs/Investments\";\r\nimport Users from \"./tabs/Users\";\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport Products from \"./tabs/Products\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NetworkContext from \"../../contexts/NetworkContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DataContext from \"../../contexts/DataContext\";\r\nimport Email from \"./tabs/Email\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  logoutButton: {\r\n\r\n  }\r\n}));\r\n\r\nconst INIT_TAB = 'users';\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const { ProductType } = useContext(DataContext);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const {onLogout} = useContext(NetworkContext);\r\n\r\n  const [tab, setTab] = useState(INIT_TAB);\r\n\r\n  const Tabs = {\r\n    users: {\r\n      name: 'Пользователи',\r\n      component: <Users/>\r\n    },\r\n    investments: {\r\n      name: 'Инвестиции',\r\n      component: <Investments/>\r\n    },\r\n    portfels: {\r\n      name: 'Портфели',\r\n      component: <Products title={'Портфели'} typeId={ProductType.PORTFEL}/>,\r\n    },\r\n    funds: {\r\n      name: 'Фонды',\r\n      component: <Products title={'Фонды'} typeId={ProductType.FUND}/>,\r\n    },\r\n    transactions: {\r\n      name: 'Транзакции',\r\n      component: 'Cписок транзакций apikeypay',\r\n    },\r\n    mail: {\r\n      name: 'Почта',\r\n      component: <Email/>,\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\" noWrap>\r\n              Панель администратора\r\n            </Typography>\r\n            <Button className={classes.logoutButton} onClick={onLogout} color=\"inherit\" >Выйти</Button>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {<ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <MenuList\r\n          tab={tab}\r\n          setTab={setTab}\r\n        />\r\n      </SwipeableDrawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {Tabs[tab].component}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuList({tab, setTab}) {\r\n  const items = useMemo(() => [{\r\n    tab: 'investments',\r\n    name: 'Инвестиции',\r\n    icon: <MonetizationOnIcon/>\r\n  },{\r\n    tab: 'users',\r\n    name: 'Пользователи',\r\n    icon: <AccountCircleIcon/>,\r\n  },{\r\n    tab: 'portfels',\r\n    name: 'Портфели',\r\n    icon: <BusinessCenterIcon/>,\r\n  },{\r\n    tab: 'funds',\r\n    name: 'Фонды',\r\n    icon: <AccountBalanceIcon/>,\r\n  },{\r\n    tab: 'transactions',\r\n    name: 'Транзакции',\r\n    icon: <CreditCardIcon/>,\r\n  },{\r\n    tab: 'mail',\r\n    name: 'Почта',\r\n    icon: <MailIcon/>\r\n  }], []);\r\n\r\n  return items.map(({tab:itemTab, icon, name}) => (\r\n    <ListItem\r\n      key={itemTab}\r\n      onClick={() => setTab(itemTab)}\r\n      selected={itemTab===tab}\r\n      button\r\n    >\r\n      <ListItemIcon>{icon}</ListItemIcon>\r\n      <ListItemText primary={name} />\r\n    </ListItem>\r\n  ))\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\nimport NetworkContext, {useNetwork} from './contexts/NetworkContext';\nimport {HashRouter as Router, Redirect, Switch, Route} from 'react-router-dom';\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport DataContext, {useApplicationData} from \"./contexts/DataContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction App() {\n  const {isNetworkReady, network} = useNetwork();\n\n  useEffect(() => {\n    network.onStartUp();\n  }, []);\n\n  const data = useApplicationData();\n\n  return isNetworkReady ? (\n    <DataContext.Provider value={data}>\n      <NetworkContext.Provider value={network}>\n        <Router>\n          {\n            network.loggedIn ?\n              <Redirect to={'/dashboard'}/>\n              :\n              <Redirect to={'/login'}/>\n          }\n          <Switch>\n            <Route path={`/login`} component={Login}/>\n            <PrivateRoute\n              accessed={network.loggedIn}\n              path={`/dashboard`}\n              component={Dashboard}\n            />\n          </Switch>\n        </Router>\n      </NetworkContext.Provider>\n    </DataContext.Provider>\n  ) : <LinearProgress />\n}\n\nconst PrivateRoute = ({component: Component, accessed, ...rest}) => (\n  <Route render={props => (\n    accessed ?\n      <Component {...props}/>\n      :\n      <Redirect to={'/login'}/>\n  )} {...rest}/>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
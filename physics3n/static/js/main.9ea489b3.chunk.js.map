{"version":3,"sources":["components/DevicePanel/Device/parts/Magnet.js","actions/isPointInPolygon.js","components/DevicePanel/Device/parts/Ball.js","actions/isPointInCircle.js","components/DevicePanel/Device/parts/Disk.js","components/DevicePanel/Device/index.js","colors.js","components/Controller/index.js","components/DevicePanel/MassInput/index.js","components/ProtocolPanel/index.js","components/DevicePanel/index.js","components/App.js","index.js"],"names":["Magnet","width","height","offsetX","L","ballBoundAngle","initPhi","Object","classCallCheck","this","initPoints","x","y","boundAngle","Math","atan","setAngle","phi","ballCollisionRightAngle","getBallCollisionRightAngle","sin","cos","points","map","point","position","center","N","length","j","c","i","isPointInPolygon","atan2","PI","userBlocked","active","ctx","_this$position","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","radGrad","createRadialGradient","addColorStop","random","fillStyle","fill","restore","Ball","R","m","v","cx","cy","omega","g","beta","initLeftPoint","sqrt","pow","isPointInCircle","leftPoint","physicsBlocked","t","dt","closePath","arc","Disk","radius","ballRadius","initLeftAngle","initRightAngle","leftAngle","rightAngle","translate","arcTo","font","fillText","concat","formatAngle","rad","abs","round","Device","_this","props","threadLength","magnetSide","state","balls","magnet","disk","clientX","clientY","dragging","magnetTurnedOn","onMouseMove","event","box","refs","canvas","getBoundingClientRect","left","top","setState","onMouseDown","mouseDown","onMouseUp","dragAndDrop","obj","handleMove","onDragStart","setPosition","addEventListener","handleDrop","onDrop","removeEventListener","hoverOn","style","cursor","hoverOff","onMagnetUserBlock","userBlock","onMagnetUserUnblock","userUnblock","onMagnetTurnOn","turnOn","onMagnetTurnOff","turnOff","magnetUnblock","draw","clearRect","update","forEach","ball","requestAnimationFrame","create","getContext","m1","m2","_this2","_this$state","slice","_this$state2","checkBallCollision","handleBallCollision","hovering","pointOver","checkMagnetAndBallRightCollision","magnetBlock","react_default","a","createElement","ref","ball1","ball2","_ref","v1","_ref2","v2","_ref3","Component","colors","Controller","Row_default","className","backgroundColor","Col_default","Button_default","onClick","turnOnMagnet","turnOffMagnet","MassInput","esm","onSubmit","ms","handleMassEnter","initialValues","md","field","type","UserInterface","DevicePanel","massEntered","device","React","createRef","current","content","DevicePanel_Device","DevicePanel_MassInput","borderColor","App","stage","devicePanel","Container_default","components_DevicePanel","components_Controller","ProtocolPanel","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ea489b3.chunk.js","sourcesContent":["import isPointInPolygon from \"../../../../actions/isPointInPolygon\";\r\n\r\nexport default class Magnet {\r\n  constructor(width, height, offsetX, L, ballBoundAngle, initPhi) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.offsetX = offsetX;\r\n    this.L = L;\r\n\r\n    this.initPoints = [\r\n      {x: -this.width/2, y: -this.height/2},\r\n      {x: this.width/2, y: -this.height/2},\r\n      {x: this.width/2, y: this.height/2},\r\n      {x: -this.width/2, y: this.height/2},\r\n    ];\r\n\r\n    this.boundAngle = Math.atan(this.width/2/this.L);\r\n    this.ballBoundAngle = ballBoundAngle;\r\n\r\n    this.setAngle(initPhi);\r\n  }\r\n\r\n  setAngle(phi) {\r\n    this.phi = phi;\r\n    this.ballCollisionRightAngle = this.getBallCollisionRightAngle();\r\n\r\n    const x = Math.sin(phi)*this.L + this.offsetX;\r\n    const y = Math.cos(phi)*this.L;\r\n\r\n    const points = this.initPoints.map(point => ({\r\n      x: point.x*Math.cos(phi) + point.y*Math.sin(phi),\r\n      y: -point.x*Math.sin(phi) + point.y*Math.cos(phi),\r\n    }));\r\n\r\n    this.position = {points, center: {x, y}};\r\n  }\r\n\r\n  getBallCollisionRightAngle() {\r\n    return this.phi + this.boundAngle + this.ballBoundAngle;\r\n  }\r\n\r\n  pointOver(x, y) {\r\n    return isPointInPolygon(x, y, this.position);\r\n  }\r\n\r\n  setPosition(x, y) {\r\n    const phi = - Math.atan2(y, x-this.offsetX) + Math.PI/2;\r\n    // console.log(phi);\r\n    this.setAngle(phi);\r\n  }\r\n\r\n  userBlock() {\r\n    this.userBlocked = true;\r\n  }\r\n\r\n  userUnblock() {\r\n    this.userBlocked = false;\r\n  }\r\n\r\n  onDragStart() {\r\n\r\n  }\r\n\r\n  onDrop() {\r\n\r\n  }\r\n\r\n  turnOn() {\r\n    this.active = true;\r\n  }\r\n\r\n  turnOff() {\r\n    this.active = false;\r\n  }\r\n\r\n  draw(ctx) {\r\n    // console.log(this.phi);\r\n    const {points, center} = this.position;\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.offsetX, 0);\r\n    ctx.lineTo(center.x, center.y);\r\n    ctx.lineWidth = 10;\r\n    ctx.strokeStyle = 'rgb(99, 99, 99)';\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(points[0].x + center.x, points[0].y + center.y);\r\n    for (let i = 1; i < points.length; i++) {\r\n      ctx.lineTo(points[i].x + center.x, points[i].y + center.y);\r\n    }\r\n\r\n    let radGrad = ctx.createRadialGradient(center.x, center.y, this.height/5, center.x, center.y, this.width*2);\r\n    if (this.active) {\r\n      radGrad.addColorStop(0, 'rgba(239,255,142)');\r\n      radGrad.addColorStop(0.05*Math.random(), 'rgb(239,255,142)');\r\n      radGrad.addColorStop(0.4, 'rgb(200, 35, 51)');\r\n      radGrad.addColorStop(1, 'rgb(200, 35, 51)');\r\n    } else {\r\n      radGrad.addColorStop(0, 'rgb(180,180,180)');\r\n      radGrad.addColorStop(0.5, 'rgb(128,128,128)');\r\n      radGrad.addColorStop(1, 'rgb(99,99,99)');\r\n    }\r\n\r\n    ctx.fillStyle = radGrad;\r\n    ctx.fill();\r\n    ctx.lineWidth = 0.7;\r\n    ctx.strokeStyle = 'rgb(99,99,99)';\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}","export default (x, y, position) => {\r\n  const points = position.points.map(point => ({\r\n    x: point.x + position.center.x,\r\n    y: point.y + position.center.y,\r\n  }));\r\n  const N = points.length;\r\n  let j = N - 1;\r\n  let c = 0;\r\n  for (let i = 0; i < N; i++){\r\n    if ((((points[i].y<=y) && (y<points[j].y)) || ((points[j].y<=y) && (y<points[i].y))) &&\r\n      (x > (points[j].x - points[i].x) * (y - points[i].y) / (points[j].y - points[i].y) + points[i].x)) {\r\n      c = !c;\r\n    }\r\n    j = i;\r\n  }\r\n  return c;\r\n}","import isPointInCircle from \"../../../../actions/isPointInCircle\";\r\n\r\nexport default class Ball {\r\n  static g = 1500;\r\n  static dt = 1/60;\r\n  // a = 0;\r\n  v = 0;\r\n  cx = null;\r\n  cy = null;\r\n\r\n  constructor(R, L, initPhi, offsetX, m) {\r\n    this.R = R;\r\n    this.L = L;\r\n    this.omega = Ball.g / L;\r\n    this.phi = initPhi;\r\n    this.offsetX = offsetX;\r\n    this.m = m;\r\n    // this.beta = 0.01/(2*m/1000);\r\n    this.beta = 1/6;\r\n\r\n    this.initLeftPoint = {\r\n      x: -this.R,\r\n      y: 0,\r\n    };\r\n\r\n    this.boundAngle = Math.atan(this.R/this.L);\r\n\r\n    this.setAngle(initPhi);\r\n  }\r\n\r\n  pointOver(x, y) {\r\n    return isPointInCircle(x, y, this.cx, this.cy, this.R);\r\n  }\r\n\r\n  setPosition(x, y) {\r\n    if (this.userBlocked) return;\r\n    const phi = -Math.atan2(y, x-this.offsetX) + Math.PI/2;\r\n    this.setAngle(phi);\r\n  }\r\n\r\n  setAngle(phi) {\r\n    this.phi = phi;\r\n    this.cx = Math.sin(phi)*this.L + this.offsetX;\r\n    this.cy = Math.cos(phi)*this.L;\r\n\r\n    this.leftPoint = {\r\n      x: this.initLeftPoint.x*Math.cos(phi) + this.initLeftPoint.y*Math.sin(phi) + this.cx,\r\n      y: -this.initLeftPoint.x*Math.sin(phi) + this.initLeftPoint.y*Math.cos(phi) + this.cy,\r\n    }\r\n  }\r\n\r\n  onDragStart() {\r\n    this.physicsBlocked = true;\r\n    this.v = 0;\r\n  }\r\n\r\n  onDrop() {\r\n    this.physicsBlocked = false;\r\n  }\r\n\r\n  magnetBlock() {\r\n    this.v = 0;\r\n    this.physicsBlocked = true;\r\n    this.userBlocked = true;\r\n  }\r\n\r\n  magnetUnblock() {\r\n    this.physicsBlocked = false;\r\n    this.userBlocked = false;\r\n  }\r\n\r\n  update(t) {\r\n    if (this.physicsBlocked) return;\r\n\r\n\r\n    const {v, phi, beta, omega} = this;\r\n\r\n    this.v = v + (-2*beta*v - omega*Math.sin(phi))*Ball.dt;\r\n    this.phi = phi + v*Ball.dt;\r\n\r\n    // this.a = -this.omega*Math.sin(this.phi);\r\n    // this.v += this.a*Ball.dt;\r\n    // this.phi += this.v*Ball.dt;\r\n    //\r\n    // this.phi *= Math.pow(1.001, -t/1000);\r\n\r\n    this.setAngle(this.phi);\r\n\r\n    // const {v}\r\n\r\n    // this.v += (-2*this.beta-this.omega*Math.sin(this.phi))*Ball.dt;\r\n    // this.phi += this.v*Ball.dt;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.offsetX, 0);\r\n    ctx.lineTo(this.cx, this.cy);\r\n    ctx.lineWidth = 0.7;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    ctx.arc(this.cx, this.cy, this.R, 0, Math.PI*2);\r\n\r\n    const radGrad = ctx.createRadialGradient(this.cx, this.cy, this.R/8, this.cx, this.cy, this.R);\r\n    radGrad.addColorStop(0, 'rgb(240, 240, 240)');\r\n    radGrad.addColorStop(0.2, 'rgb(235, 235, 235)');\r\n    radGrad.addColorStop(1, 'rgb(200, 200, 200)');\r\n\r\n    ctx.fillStyle = radGrad;\r\n\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}","export default (x, y, cx, cy, R) => {\r\n  return Math.sqrt((x-cx)**2+(y-cy)**2) <= R;\r\n}","export default class Disk {\r\n  constructor(cx, radius, ballRadius, initLeftAngle, initRightAngle) {\r\n    this.cx = cx;\r\n    this.radius = radius;\r\n    this.ballRadius = ballRadius;\r\n\r\n    this.leftAngle = initLeftAngle;\r\n    this.rightAngle = initRightAngle;\r\n  }\r\n\r\n  update(leftAngle, rightAngle) {\r\n    this.leftAngle = leftAngle;\r\n    this.rightAngle = rightAngle;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n\r\n    ctx.translate(this.cx, 0);\r\n\r\n    const {radius, ballRadius} = this;\r\n\r\n    ctx.beginPath();\r\n\r\n    ctx.moveTo(-radius-ballRadius, 0);\r\n    ctx.arcTo(-radius-ballRadius, radius, -ballRadius, radius, radius);\r\n    ctx.lineTo(ballRadius, radius);\r\n    ctx.arcTo(radius + ballRadius, radius, ballRadius+radius, 0, radius);\r\n\r\n    // ctx.closePath();\r\n\r\n    ctx.fillStyle = 'rgb(242, 242, 242)';\r\n    ctx.strokeStyle = 'rgb(170,170,170)';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 2.5;\r\n    ctx.font = '20px sans-serif';\r\n\r\n    // left angle\r\n\r\n    ctx.strokeStyle = 'rgba(220,53,69,0.76)';\r\n    ctx.fillStyle = 'rgba(220,53,69,0.76)';\r\n    ctx.beginPath();\r\n    if (this.leftAngle < 0) ctx.arc(-ballRadius, 0, radius, Math.PI/2, Math.PI/2 - this.leftAngle);\r\n    ctx.stroke();\r\n    ctx.fillText(`${formatAngle(this.leftAngle)}°`, -ballRadius*2.3, radius/2);\r\n\r\n    // right angle\r\n    ctx.strokeStyle = 'rgba(0,123,255,0.76)';\r\n    ctx.fillStyle = 'rgba(0,123,255,0.76)';\r\n    ctx.beginPath();\r\n    if (this.rightAngle > 0) ctx.arc(ballRadius, 0, radius, Math.PI/2, Math.PI/2 - this.rightAngle, true);\r\n    ctx.stroke();\r\n    ctx.fillText(`${formatAngle(this.rightAngle)}°`, ballRadius*1.5, radius/2);\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nfunction formatAngle(rad) {\r\n  return Math.abs(Math.round(rad/Math.PI*180));\r\n}","import React, {Component} from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Magnet from \"./parts/Magnet\";\r\nimport Ball from \"./parts/Ball\";\r\nimport Disk from \"./parts/Disk\";\r\nimport './style.css';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass Device extends Component {\r\n  width = this.props.width;\r\n  height = this.props.height;\r\n\r\n  ballRadius = 25;\r\n  threadLength = 340;\r\n  magnetSide = 50;\r\n  ballBoundAngle = Math.atan(this.ballRadius/this.threadLength);\r\n\r\n  state = {\r\n    balls: null,\r\n    magnet: null,\r\n    disk: null,\r\n    clientX: null,\r\n    clientY: null,\r\n    dragging: false,\r\n    magnetTurnedOn: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.create();\r\n    requestAnimationFrame(this.draw);\r\n  }\r\n\r\n  create() {\r\n    this.ctx = this.refs.canvas.getContext('2d');\r\n    this.refs.canvas.addEventListener('mousemove', this.onMouseMove);\r\n    this.refs.canvas.addEventListener('mousedown', this.onMouseDown);\r\n    this.refs.canvas.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    const balls = [\r\n      new Ball(this.ballRadius, this.threadLength, 0, this.width/2-this.ballRadius, this.props.m1),\r\n      new Ball(this.ballRadius, this.threadLength, 0, this.width/2+this.ballRadius, this.props.m2),\r\n    ];\r\n\r\n    const magnet = new Magnet(this.magnetSide, this.magnetSide, this.width/2-this.ballRadius, this.threadLength, this.ballBoundAngle, -Math.PI/3);\r\n\r\n    const disk = new Disk(this.width/2, this.height/6, this.ballRadius, 0, 0);\r\n\r\n    this.setState({ balls, magnet, disk });\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    const box = this.refs.canvas.getBoundingClientRect();\r\n    const clientX = event.clientX - box.left;\r\n    const clientY = event.clientY - box.top;\r\n    this.setState({clientX, clientY});\r\n  };\r\n\r\n  onMouseDown = (event) => {\r\n    this.setState({mouseDown: true});\r\n  };\r\n\r\n  onMouseUp = (event) => {\r\n    this.setState({mouseDown: false});\r\n  };\r\n\r\n  dragAndDrop = (obj) => {\r\n    if (this.state.dragging || obj.userBlocked) return;\r\n    this.setState({dragging: true});\r\n    const handleMove = () => {\r\n      obj.onDragStart();\r\n      obj.setPosition(this.state.clientX, this.state.clientY);\r\n    };\r\n    const handleDrop = () => {\r\n      obj.onDrop();\r\n      this.refs.canvas.removeEventListener('mousemove', handleMove);\r\n      this.refs.canvas.removeEventListener('mouseup', handleDrop);\r\n      this.setState({dragging: false});\r\n    };\r\n    this.refs.canvas.addEventListener('mousemove', handleMove);\r\n    this.refs.canvas.addEventListener('mouseup', handleDrop);\r\n  };\r\n\r\n  hoverOn = () => {\r\n    this.refs.canvas.style.cursor = 'pointer';\r\n  };\r\n\r\n  hoverOff = () => {\r\n    this.refs.canvas.style.cursor = 'unset';\r\n  };\r\n\r\n  onMagnetUserBlock = () => {\r\n    this.state.magnet.userBlock();\r\n  };\r\n\r\n  onMagnetUserUnblock = () => {\r\n    this.state.magnet.userUnblock();\r\n  };\r\n\r\n  onMagnetTurnOn = () => {\r\n    this.state.magnet.turnOn();\r\n    this.state.magnet.userBlock();\r\n    this.setState({magnetTurnedOn: true});\r\n  };\r\n\r\n  onMagnetTurnOff = () => {\r\n    this.state.magnet.turnOff();\r\n    this.state.magnet.userUnblock();\r\n    this.state.balls[0].magnetUnblock();\r\n    this.setState({magnetTurnedOn: false});\r\n  };\r\n\r\n  static checkBallCollision(ball1, ball2) {\r\n    return Math.sqrt((ball1.cx-ball2.cx)**2+(ball1.cy-ball2.cy)**2) <= ball1.R + ball2.R;\r\n  }\r\n\r\n  static handleBallCollision(ball1, ball2) {\r\n    const [m1, v1] = [ball1.m, ball1.v];\r\n    const [m2, v2] = [ball2.m, ball2.v];\r\n    const u1 = ((m1-m2)*v1 + 2*m2*v2)/(m1+m2);\r\n    const u2 = ((m2-m1)*v2 + 2*m1*v1)/(m1+m2);\r\n    [ball1.v, ball2.v] = [u1, u2];\r\n  }\r\n\r\n  static checkMagnetAndBallRightCollision(magnet, ball) {\r\n    return magnet.phi + magnet.boundAngle >= ball.phi - ball.boundAngle*2;\r\n  }\r\n\r\n  update(t) {\r\n    const {clientX, clientY, mouseDown} = this.state;\r\n\r\n    const balls = this.state.balls.slice();\r\n    const { magnet, disk } = this.state;\r\n\r\n    if (Device.checkBallCollision(balls[0], balls[1])) {\r\n      Device.handleBallCollision(balls[0], balls[1]);\r\n    }\r\n\r\n    let hovering = false;\r\n\r\n    if (magnet.pointOver(clientX, clientY)) {\r\n      hovering = true;\r\n      if (mouseDown) this.dragAndDrop(magnet);\r\n    }\r\n\r\n    if (this.state.magnetTurnedOn && Device.checkMagnetAndBallRightCollision(magnet, balls[0])) {\r\n      balls[0].setAngle(magnet.ballCollisionRightAngle);\r\n      balls[0].magnetBlock();\r\n    }\r\n\r\n    balls.forEach(ball => {\r\n      if (ball.pointOver(clientX, clientY)) {\r\n        hovering = true;\r\n        if (mouseDown) this.dragAndDrop(ball);\r\n      }\r\n      ball.update(t);\r\n    });\r\n\r\n    disk.update(magnet.ballCollisionRightAngle, balls[1].phi);\r\n\r\n    if (hovering) this.hoverOn();\r\n    else this.hoverOff();\r\n\r\n    this.setState({balls});\r\n  }\r\n\r\n  draw = (t) => {\r\n    if (!this.state.balls || !this.state.magnet) return;\r\n\r\n    this.ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n    this.update(t);\r\n\r\n    this.state.magnet.draw(this.ctx);\r\n    this.state.balls.forEach(ball => ball.draw(this.ctx));\r\n    this.state.disk.draw(this.ctx);\r\n\r\n    requestAnimationFrame(this.draw);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas ref={\"canvas\"} width={this.width} height={this.height}>HTML5 support is required to run this app</canvas>\r\n    );\r\n  }\r\n}\r\n\r\nconst TestPanel = (props) => {\r\n  return (\r\n    <Row>\r\n      {props.balls && props.balls.map((ball, i) => {\r\n        return (\r\n          <Col>\r\n            <Col>{`ball${i} a: ${ball.a.toFixed(2)}`}</Col>\r\n            <Col>{`ball${i} v: ${ball.v.toFixed(2)}`}</Col>\r\n            <Col>{`ball${i} phi: ${(ball.phi/Math.PI*180).toFixed(2)}grad`}</Col>\r\n            {/*<Col>{`ball${i} cx: ${ball.cx.toFixed(2)}`}</Col>*/}\r\n            {/*<Col>{`ball${i} cy: ${ball.cy.toFixed(2)}`}</Col>*/}\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Device;","export default {\r\n  background: \"rgba(178,212,255,0.55)\",\r\n};","import React, {Component} from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './style.css';\r\nimport colors from '../../colors.js';\r\n\r\nclass Controller extends Component {\r\n  render() {\r\n    return (\r\n      <Row className={\"Controller mx-auto align-items-center shadow-sm\"} style={{backgroundColor: colors.background}}>\r\n        <Col className={\"d-flex p-0 m-0 justify-content-between\"}>\r\n          <Button onClick={this.props.turnOnMagnet} className={\"stop btn-danger\"}>{\"СТОП\"}</Button>\r\n          <Button onClick={this.props.turnOffMagnet} className={\"go\"}>{\"ПУСК\"}</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controller;","import React, {Component} from 'react';\r\nimport { Form, Text } from 'informed';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport './style.css';\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n\r\nclass MassInput extends Component {\r\n  render() {\r\n    return (\r\n      <Col className={\"MassInput d-flex justify-content-center\"}>\r\n        <Form\r\n          onSubmit={(ms) => this.props.handleMassEnter(ms.m1, ms.m2)}\r\n          initialValues={{\r\n            m1: 10,\r\n            m2: 30,\r\n          }}\r\n        >\r\n          <Row className={'m-1 p-0'}>\r\n            <Col className={'m-0 p-0'}>Масса первого шарика:</Col>\r\n            <Col md={'auto'} className={'m-0 p-0'}><Text field=\"m1\"/> г</Col>\r\n          </Row>\r\n          <Row className={'m-1 p-0'}>\r\n            <Col className={'m-0 p-0'}>Масса второго шарика:</Col>\r\n            <Col md={'auto'} className={'m-0 p-0'}><Text field=\"m2\"/> г</Col>\r\n          </Row>\r\n          <Row className={'m-1 p-0'}>\r\n            <Button type=\"submit\">НАЧАТЬ</Button>\r\n          </Row>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MassInput;","import React, {Component} from 'react';\r\nimport MassInput from \"../DevicePanel/MassInput\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass UserInterface extends Component {\r\n  render() {\r\n    return (\r\n      <Col className={\"d-flex p-0 justify-content-center\"}>\r\n        {/*<EnterMasses/>*/}\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInterface;","import React, {Component} from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Device from \"./Device\";\r\nimport MassInput from \"./MassInput\";\r\nimport colors from \"../../colors.js\";\r\nimport './style.css';\r\n\r\nclass DevicePanel extends Component {\r\n  width = 800;\r\n  height = 400;\r\n\r\n  state = {\r\n    massEntered: false,\r\n    m1: null,\r\n    m2: null,\r\n  };\r\n\r\n  handleMassEnter = (m1, m2) => {\r\n    this.setState({massEntered: true, m1, m2});\r\n  };\r\n\r\n  device = React.createRef();\r\n  onMagnetTurnOn = () => this.device.current.onMagnetTurnOn();\r\n  onMagnetTurnOff = () => this.device.current.onMagnetTurnOff();\r\n\r\n  render() {\r\n    const content = this.state.massEntered ?\r\n      <Device ref={this.device} m1={+this.state.m1} m2={+this.state.m2} width={this.width} height={this.height}/>\r\n      : <MassInput handleMassEnter={this.handleMassEnter}/>;\r\n\r\n    return (\r\n      <Col\r\n        md={'auto'}\r\n        className={\"DevicePanel d-flex align-items-center p-0 shadow-sm\"}\r\n        style={{\r\n          borderColor: colors.background,\r\n          width: this.width,\r\n          height: this.height,\r\n        }}\r\n      >\r\n        {content}\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DevicePanel;","import React, {Component} from 'react';\nimport Device from \"./DevicePanel/Device\";\nimport Controller from \"./Controller\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport './style.css';\nimport hints from '../hints.js';\nimport UserInterface from \"./ProtocolPanel\";\nimport DevicePanel from \"./DevicePanel\";\n\nclass App extends Component {\n  state = {\n    stage: 0,\n  };\n\n  devicePanel = React.createRef();\n  turnOnMagnet = () => this.devicePanel.current.onMagnetTurnOn();\n  turnOffMagnet = () => this.devicePanel.current.onMagnetTurnOff();\n\n  render() {\n    return (\n      <Container className={\"mt-3\"}>\n        <Row className={\"d-flex justify-content-center flex-nowrap\"}>\n          <DevicePanel ref={this.devicePanel}/>\n          <Col className={\"right-panel\"}>\n            <Controller turnOnMagnet={this.turnOnMagnet} turnOffMagnet={this.turnOffMagnet}/>\n            <UserInterface/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}